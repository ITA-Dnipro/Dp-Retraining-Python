"""Employee + EmployeeRole + m2m tables for Charity+Employee added.

Revision ID: e5ca5459a7fb
Revises: a1887f05fffb
Create Date: 2022-06-17 12:18:38.475496

"""
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'e5ca5459a7fb'
down_revision = 'a1887f05fffb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_roles',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_employee_roles_id'), 'employee_roles', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('phone_number', sa.String(length=64), nullable=False),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('employees',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('charity_employee_association',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('charity_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('employee_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['charity_id'], ['charities.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('charity_id', 'employee_id', name='_charity_employee_uc')
    )
    op.create_index(op.f('ix_charity_employee_association_id'), 'charity_employee_association', ['id'], unique=False)
    op.create_table('charity_employee_role_association',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('charity_employee_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['charity_employee_id'], ['charity_employee_association.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['employee_roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('charity_employee_id', 'role_id', name='_charity_employee_role_uc')
    )
    op.create_index(op.f('ix_charity_employee_role_association_id'), 'charity_employee_role_association', ['id'], unique=False)
    op.drop_index('ix_charity_user_association_id', table_name='charity_user_association')
    op.drop_table('charity_user_association')
    op.drop_index('ix_Users_id', table_name='Users')
    op.drop_constraint('change-password-token_user_id_fkey', 'change-password-token', type_='foreignkey')
    op.drop_constraint('email-confirmation-token_user_id_fkey', 'email-confirmation-token', type_='foreignkey')
    op.drop_constraint('user-pictures_user_id_fkey', 'user-pictures', type_='foreignkey')
    op.drop_table('Users')
    op.create_foreign_key(None, 'change-password-token', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'email-confirmation-token', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'user-pictures', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user-pictures', type_='foreignkey')
    op.create_foreign_key('user-pictures_user_id_fkey', 'user-pictures', 'Users', ['user_id'], ['id'])
    op.drop_constraint(None, 'email-confirmation-token', type_='foreignkey')
    op.create_foreign_key('email-confirmation-token_user_id_fkey', 'email-confirmation-token', 'Users', ['user_id'], ['id'])
    op.drop_constraint(None, 'change-password-token', type_='foreignkey')
    op.create_foreign_key('change-password-token_user_id_fkey', 'change-password-token', 'Users', ['user_id'], ['id'])
    op.create_table('Users',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('activated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Users_pkey'),
    sa.UniqueConstraint('email', name='Users_email_key'),
    sa.UniqueConstraint('phone_number', name='Users_phone_number_key'),
    sa.UniqueConstraint('username', name='Users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Users_id', 'Users', ['id'], unique=False)
    op.create_table('charity_user_association',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('charity_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['charity_id'], ['charities.id'], name='charity_user_association_charity_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='charity_user_association_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='charity_user_association_pkey'),
    sa.UniqueConstraint('charity_id', 'user_id', name='_charity_user_uc')
    )
    op.create_index('ix_charity_user_association_id', 'charity_user_association', ['id'], unique=False)
    op.drop_index(op.f('ix_charity_employee_role_association_id'), table_name='charity_employee_role_association')
    op.drop_table('charity_employee_role_association')
    op.drop_index(op.f('ix_charity_employee_association_id'), table_name='charity_employee_association')
    op.drop_table('charity_employee_association')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_employee_roles_id'), table_name='employee_roles')
    op.drop_table('employee_roles')
    # ### end Alembic commands ###
